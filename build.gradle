/** GLOBAL SETTINGS STARTS HERE */

// This includes the root project and all sub projects. A common pattern is a rootProject has no
// code and the subprojects are java projects.
allprojects {

    group = 'com.higuowai'
    version = '1.0'

    apply plugin: 'eclipse'
    apply plugin: 'idea'
}

subprojects {

    apply plugin: 'java'

    archivesBaseName = 'higuowai'

    // all sub projects ext variables
    ext {
        // dependencies library versions
        springVersion = '4.2.4.RELEASE'
        securityVersion = '4.0.3.RELEASE'
        servletVersion = '3.1.0'
        jacksonVersion = '2.5.3'
        mysqlVersion = '5.1.36'
        mybatisVersion = '3.3.0'
        mybatisSpringVersion = '1.2.3'
        druidVersion = '1.0.16'
        ossVersion = '2.0.5'
        jjwtVersion = '0.6.0'

        // Shared manifest file to be used by jar and war tasks
        sharedManifest = manifest {
            attributes 'Implementation-Title': "${project.name}",
                    'Implementation-Version': "${version}",
                    'Implementation-Vendor': 'Shanghai Yedao Technology',
                    'Built-By': 'Mode',
                    'Built-Date': new Date().getDateTimeString(),
                    'Built-With': "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
                    'Created-By': 'Java ' + System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')'
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    // Settings for the compile task
    tasks.withType(JavaCompile) {
        sourceCompatibility = '1.7'
        targetCompatibility = '1.7'
        options.encoding = 'UTF-8'
        options.debug = true
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xlint:deprecation"
    }

    // Config servlet container for war projects
    configure([project(":user")]) {

        // Add the gretty plugin for running/deploying war against jetty or tomcat
        apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

        // Servlet container specific settings
        gretty {
            httpPort = 8080
            contextPath = '/'
            servletContainer = 'tomcat8'
            scanInterval = 600 // Hot-deployment scan interval, in seconds.
        }

        // Replace jdbc, log4j tokens with env specific settings
        processResources {
            def env = project.hasProperty('env') ? env : 'local'
            def configFile = file("${rootProject.projectDir}/config.groovy")
            def envProp = new ConfigSlurper("${env}").parse(configFile.toURL()).toProperties()

            from(sourceSets.main.resources.srcDirs) {
                filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: envProp)
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
/** GLOBAL SETTINGS ENDS HERE */

/** START OF PROJECT-SPECIFIC SETTINGS */
project(':core') {

    // create a single Jar without dependencies
    jar {
        classifier = 'core'
        manifest = sharedManifest
    }

    // create a single Jar with all dependencies
    task fatJar(type: Jar) {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        classifier = 'core'
        manifest = sharedManifest
    }

    dependencies {
        compile "org.springframework:spring-context:${springVersion}"
        compile "org.springframework.security:spring-security-web:${securityVersion}"
        compile "org.springframework.security:spring-security-config:${securityVersion}"
        compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
        compile "javax.servlet:javax.servlet-api:${servletVersion}"
        compile "org.mybatis:mybatis:${mybatisVersion}"
        compile "com.aliyun.oss:aliyun-sdk-oss:${ossVersion}"
        compile "io.jsonwebtoken:jjwt:${jjwtVersion}"
    }
}

project(':user') {

    apply plugin: 'war'

    war {
        classifier = 'user'
        manifest = sharedManifest
    }

    dependencies {
        compile project(':core')
        compile "org.springframework:spring-webmvc:${springVersion}"
        compile "org.springframework:spring-jdbc:${springVersion}"
        compile "org.springframework:spring-tx:${springVersion}"
        compile "org.mybatis:mybatis-spring:${mybatisSpringVersion}"
        compile "mysql:mysql-connector-java:${mysqlVersion}"
        compile "com.alibaba:druid:${druidVersion}"
    }
}
/** END OF PROJECT-SPECIFIC SETTINGS */
